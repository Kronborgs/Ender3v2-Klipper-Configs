# Macros for a modified Ender-3 v2 with Sprite Pro Extruder,
# BL Touch, with a 4.2.7 silent board


# Adds print macros such as start print and end print.
# in cura, as start gcode you can define "START_PRINT" 
#and end gcode "END_PRINT"

#=====================================================
# START PRINT
#=====================================================

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT.

[gcode_macro START_PRINT]
gcode:
    #Get Printer built volume dimensions
    {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
    {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
    {% set Z_MAX = printer.toolhead.axis_maximum.z|default(100)|float %}

    #Get Nozzle diameter and filament width for conditioning
    {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.4)|float %}
    {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}

    #Set Start coordinates of priming lines
    {% set X_START = 10.0|default(10.0)|float %}
    {% set Y_START = 20.0|default(20.0)|float %}

    #Calculate Primer line extrusion volume and filament length
    {% set PRIMER_WIDTH = 0.75 * NOZZLE %}                    
    {% set PRIMER_HEIGHT = 0.70 * NOZZLE %}           
    {% set PRIMER_SECT = PRIMER_WIDTH * PRIMER_HEIGHT %}    
    {% set PRIMER_VOL = PRIMER_SECT * (X_MAX - 3 * X_START) %}    
    {% set FILA_SECT = 3.1415 * ( FILADIA / 2.0)**2 %}          
    {% set FILA_LENGTH = 1.55 * PRIMER_VOL / FILA_SECT %}      

    #Get Bed and Extruder temperature from Slicer GCode
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    #Preheat nozzle and bed
    M104 S{EXTRUDER_TEMP} T0                        
    M140 S{BED_TEMP}                                

    #Home
    G28

    #Move up to clean bed
    G1 Y{Y_MAX - 20} Z{Z_MAX/4.0} F6000                

    #Heat nozzle and bed
    M190 S{BED_TEMP}                               
    M109 S{EXTRUDER_TEMP} T0                       

    #Precondition extruder
    G92 E0     
    G1 X{X_START} Y{Y_START} Z{PRIMER_HEIGHT} F6000.0     
    G1 X{X_MAX - 2 * X_START} Y{Y_START} Z{PRIMER_HEIGHT} F2000.0 
    G1 X{X_MAX - 2 * X_START} Y{Y_START + PRIMER_WIDTH} Z{PRIMER_HEIGHT} 
    G1 X{X_START} Y{Y_START + PRIMER_WIDTH} Z{PRIMER_HEIGHT} F2000.0 
    G92 E0            
    G1 Z2.0 F600        
    G1 Z0.2 F600        
    G1 Z2.0 F600

#=====================================================
# END PRINT
#=====================================================

[gcode_macro END_PRINT]
gcode:

    #Fix-up extruder
    G91                                                                              
    G1 E-.5 Z0.2 F2400                        
    G1 X5 Y5 F6000                               
    G1 Z10                                     
    G90                                        

    #Present print
    G1 Z{printer.toolhead.position.z + 10} F600
    G1 X0 Y{220} F6000
    M106 S0                                      
    M104 S0                                       
    M140 S0                                 

    #Disable Steppers
    M84 X Y E         

# #=====================================================
# # PRIME LINE
# #=====================================================

# [gcode_macro NOZZLE_PRIME_LINE]
# description:
#   Prime the nozzle by laying a strip of plastic along the left side of the bed
# gcode:
#   SAVE_GCODE_STATE NAME=nozzle_prime_state

#   {% set pi = 3.1415926536 %}
#   {% set nozzle_diam = printer.configfile.settings.extruder.nozzle_diameter %}
#   # TODO: try reading the filament diameter from a sensor
#   {% set filament_diam = printer.configfile.settings.extruder.filament_diameter %}
#   # TODO: figure out how to recover if firmware retraction isn't defined
#   {% set retract_len = printer.configfile.settings.firmware_retraction.retract_length %}
#   {% set layer_height = 0.28 %}
#   {% set line_width = nozzle_diam * 1.75 %}
#   {% set x_start = printer.toolhead.axis_minimum.x + 5 %}
#   {% set x_end = x_start + line_width %}
#   {% set y_start = printer.toolhead.axis_minimum.y + 20 %}
#   {% set y_end = y_start + 180 %}
#   {% if y_end > printer.toolhead.axis_maximum.y - 20 %}
#     {% set y_end = printer.toolhead.axis_maximum.y - 20 %}
#   {% endif %}
#   {% set y_diff = y_end - y_start %}
#   {% set extrude_cross_section_area = (pi * ((layer_height / 2) ** 2)) + ((line_width - layer_height) * layer_height) %}
#   {% set extrude_vol = y_diff * extrude_cross_section_area %}
#   # TODO: figure out why my E math is wrong.
#   # I'd expect E-vals to be 15, but I'm getting ~8.38
#   {% set extrude_len = (extrude_vol * 1.75) / (pi * (filament_diam / 2) ** 2) %}
#   ##### end of definitions #####

#   G90 ;Absolute positionning
#   M82 ;Absolute extrusion
#   G92 E0 ;Reset extruder

#   G1 Z5.0 F3000 ;Move Z axis up

#   # TODO: consider priming along the front of the bed
#   G1 X{x_start} Y{y_start} F5000.0 ;Move tool to XY pos
#   G1 Z{layer_height} F5000.0 ;Move tool down
#   G1 X{x_start} Y{y_end} Z{layer_height} F1500.0 E{extrude_len} ;Start priming wipe
#   G1 X{x_end} Y{y_end} Z{layer_height} F5000.0
#   G1 X{x_end} Y{y_start} Z{layer_height} F1500.0 E{extrude_len * 2} ;Finish priming wipe

#   G1 Z5.0 E{(extrude_len * 2) - retract_len} F3000 ;Move Z axis up & retract
#   G92 E0 ;Reset extruder

#   RESTORE_GCODE_STATE NAME=nozzle_prime_state

#=====================================================
# BUILD THE BED MESH
#=====================================================
# G29 that does (1) home all (2) get bed mesh (3) move 
# nozzle to corner so it doesnt ooze on the bed while heating up.
# Change save to "save=yourprinter_mesh" cant use default
[gcode_macro G29]
gcode:
    G28
    BED_MESH_CALIBRATE
    G0 X0 Y0 Z10 F6000
    BED_MESH_PROFILE save=ender3v2_mesh

#=====================================================
# PARK PRINTER
#=====================================================
# Park toolhead
[gcode_macro M125]
gcode:
    SAVE_GCODE_STATE NAME=parking
    M117 Parking toolhead
    G91
    G1 Z10 F600 # move up 5 mm
    G90
    G1 X5 Y225 F4000 # move to park position
    RESTORE_GCODE_STATE NAME=parking


#======================================================
# LOAD FILAMENT
#======================================================
[gcode_macro Load_Filament]
gcode:
    SAVE_GCODE_STATE NAME=loading_filament
    M117 Loading Filament
    M83
    G92 E0.0
    G1 E5 F200  # Load filament into sprite and prime 5mm 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=loading_filament

#======================================================
# UNLOAD FILAMENT
#======================================================
[gcode_macro Unload_Filament]
gcode:
    SAVE_GCODE_STATE NAME=unloading_filament
    M125 # park
    M117 Unloading Filament 
    G91 # set relative
    G1 E10 F100 
    G92 E0.0
    G1 E-5 F3000 # Unload filament from sprite 5mm 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=unloading_filament

#======================================================
# FILAMENT CHANGE
#======================================================
[gcode_macro Filament_Change]
gcode:
    M117 Filament Change
    M118 Filament Change
    SAVE_GCODE_STATE NAME=filament_change
    PAUSE
    G91 # relative
    G1 E-1 F300 # retract 1
    M125 # park
    G1 E-5 F300 # retract 5
    RESTORE_GCODE_STATE NAME=filament_change

#=====================================================
# PAUSE
#=====================================================

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(5) %}      #edit to your park position
    {% set y = params.Y|default(225) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{e} F2100
    {% else %}
        {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000
    {% else %}
    {action_respond_info("Printer not homed")}
    {% endif %}

#=====================================================
# RESUME
#=====================================================

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
    {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E{e} F2100
    {% else %}
    {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

#=====================================================
# CANCEL
#=====================================================

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    G0 X5 Y220 Z10 #raise extruder and clear
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

